/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Dappazon, DappazonInterface } from "../Dappazon";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "List",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemList",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "catagory",
        type: "string",
      },
      {
        internalType: "string",
        name: "image",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rating",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_catagory",
        type: "string",
      },
      {
        internalType: "string",
        name: "_image",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rating",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stock",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c1e806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633d4d3600146100465780638da5cb5b1461007c578063eea8a7e81461009a575b600080fd5b610060600480360381019061005b9190610489565b6100b6565b6040516100739796959493929190610555565b60405180910390f35b610084610290565b604051610091919061061a565b60405180910390f35b6100b460048036038101906100af919061076a565b6102b4565b005b60016020528060005260406000206000915090508060000154908060010180546100df9061088f565b80601f016020809104026020016040519081016040528092919081815260200182805461010b9061088f565b80156101585780601f1061012d57610100808354040283529160200191610158565b820191906000526020600020905b81548152906001019060200180831161013b57829003601f168201915b50505050509080600201805461016d9061088f565b80601f01602080910402602001604051908101604052809291908181526020018280546101999061088f565b80156101e65780601f106101bb576101008083540402835291602001916101e6565b820191906000526020600020905b8154815290600101906020018083116101c957829003601f168201915b5050505050908060030180546101fb9061088f565b80601f01602080910402602001604051908101604052809291908181526020018280546102279061088f565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b5050505050908060040154908060050154908060060154905087565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103399061090c565b60405180910390fd5b60006040518060e0016040528089815260200188815260200187815260200186815260200185815260200184815260200183815250905080600160008a81526020019081526020016000206000820151816000015560208201518160010190816103ac9190610ad8565b5060408201518160020190816103c29190610ad8565b5060608201518160030190816103d89190610ad8565b506080820151816004015560a0820151816005015560c082015181600601559050507ffdbe2a012c10ec01592653978eaa09b5ca60b143a0e617505b2ebcbd911ec5b887858460405161042d93929190610baa565b60405180910390a15050505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61046681610453565b811461047157600080fd5b50565b6000813590506104838161045d565b92915050565b60006020828403121561049f5761049e610449565b5b60006104ad84828501610474565b91505092915050565b6104bf81610453565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104ff5780820151818401526020810190506104e4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610527826104c5565b61053181856104d0565b93506105418185602086016104e1565b61054a8161050b565b840191505092915050565b600060e08201905061056a600083018a6104b6565b818103602083015261057c818961051c565b90508181036040830152610590818861051c565b905081810360608301526105a4818761051c565b90506105b360808301866104b6565b6105c060a08301856104b6565b6105cd60c08301846104b6565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610604826105d9565b9050919050565b610614816105f9565b82525050565b600060208201905061062f600083018461060b565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106778261050b565b810181811067ffffffffffffffff821117156106965761069561063f565b5b80604052505050565b60006106a961043f565b90506106b5828261066e565b919050565b600067ffffffffffffffff8211156106d5576106d461063f565b5b6106de8261050b565b9050602081019050919050565b82818337600083830152505050565b600061070d610708846106ba565b61069f565b9050828152602081018484840111156107295761072861063a565b5b6107348482856106eb565b509392505050565b600082601f83011261075157610750610635565b5b81356107618482602086016106fa565b91505092915050565b600080600080600080600060e0888a03121561078957610788610449565b5b60006107978a828b01610474565b975050602088013567ffffffffffffffff8111156107b8576107b761044e565b5b6107c48a828b0161073c565b965050604088013567ffffffffffffffff8111156107e5576107e461044e565b5b6107f18a828b0161073c565b955050606088013567ffffffffffffffff8111156108125761081161044e565b5b61081e8a828b0161073c565b945050608061082f8a828b01610474565b93505060a06108408a828b01610474565b92505060c06108518a828b01610474565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108a757607f821691505b6020821081036108ba576108b9610860565b5b50919050565b7f4f6e6c79204f776e65722063616e204c6973742070726f647563740000000000600082015250565b60006108f6601b836104d0565b9150610901826108c0565b602082019050919050565b60006020820190508181036000830152610925816108e9565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261098e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610951565b6109988683610951565b95508019841693508086168417925050509392505050565b6000819050919050565b60006109d56109d06109cb84610453565b6109b0565b610453565b9050919050565b6000819050919050565b6109ef836109ba565b610a036109fb826109dc565b84845461095e565b825550505050565b600090565b610a18610a0b565b610a238184846109e6565b505050565b5b81811015610a4757610a3c600082610a10565b600181019050610a29565b5050565b601f821115610a8c57610a5d8161092c565b610a6684610941565b81016020851015610a75578190505b610a89610a8185610941565b830182610a28565b50505b505050565b600082821c905092915050565b6000610aaf60001984600802610a91565b1980831691505092915050565b6000610ac88383610a9e565b9150826002028217905092915050565b610ae1826104c5565b67ffffffffffffffff811115610afa57610af961063f565b5b610b04825461088f565b610b0f828285610a4b565b600060209050601f831160018114610b425760008415610b30578287015190505b610b3a8582610abc565b865550610ba2565b601f198416610b508661092c565b60005b82811015610b7857848901518255600182019150602085019450602081019050610b53565b86831015610b955784890151610b91601f891682610a9e565b8355505b6001600288020188555050505b505050505050565b60006060820190508181036000830152610bc4818661051c565b9050610bd360208301856104b6565b610be060408301846104b6565b94935050505056fea2646970667358221220062d250942cac1feeda43f252341da3b0e409df960a6a819cfe8e97c3e5856a864736f6c63430008180033";

type DappazonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DappazonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dappazon__factory extends ContractFactory {
  constructor(...args: DappazonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Dappazon & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Dappazon__factory {
    return super.connect(runner) as Dappazon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DappazonInterface {
    return new Interface(_abi) as DappazonInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Dappazon {
    return new Contract(address, _abi, runner) as unknown as Dappazon;
  }
}
