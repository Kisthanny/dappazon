/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Dappazon, DappazonInterface } from "../Dappazon";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "List",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "itemExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemList",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "string",
        name: "image",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rating",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_category",
        type: "string",
      },
      {
        internalType: "string",
        name: "_image",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rating",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stock",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "orderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rating",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stock",
            type: "uint256",
          },
        ],
        internalType: "struct Dappazon.Item",
        name: "item",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a02806100606000396000f3fe60806040526004361061007b5760003560e01c8063843bd6411161004e578063843bd641146101555780638da5cb5b14610192578063d96a094a146101bd578063eea8a7e8146101d95761007b565b80633ccfd60b146100805780633d4d360014610097578063713d856b146100da578063793b8c6d14610117575b600080fd5b34801561008c57600080fd5b50610095610202565b005b3480156100a357600080fd5b506100be60048036038101906100b99190610e2a565b6102ff565b6040516100d19796959493929190610ef6565b60405180910390f35b3480156100e657600080fd5b5061010160048036038101906100fc9190610fd8565b6104d9565b60405161010e9190611005565b60405180910390f35b34801561012357600080fd5b5061013e60048036038101906101399190611020565b6104f1565b60405161014c929190611163565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610e2a565b61070a565b60405161018991906111ae565b60405180910390f35b34801561019e57600080fd5b506101a761072d565b6040516101b491906111d8565b60405180910390f35b6101d760048036038101906101d29190610e2a565b610751565b005b3480156101e557600080fd5b5061020060048036038101906101fb9190611328565b610c55565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610290576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102879061146a565b60405180910390fd5b600047905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102fb573d6000803e3d6000fd5b5050565b6001602052806000526040600020600091509050806000015490806001018054610328906114b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610354906114b9565b80156103a15780601f10610376576101008083540402835291602001916103a1565b820191906000526020600020905b81548152906001019060200180831161038457829003601f168201915b5050505050908060020180546103b6906114b9565b80601f01602080910402602001604051908101604052809291908181526020018280546103e2906114b9565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505050505090806003018054610444906114b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610470906114b9565b80156104bd5780601f10610492576101008083540402835291602001916104bd565b820191906000526020600020905b8154815290600101906020018083116104a057829003601f168201915b5050505050908060040154908060050154908060060154905087565b60026020528060005260406000206000915090505481565b600360205281600052604060002060205280600052604060002060009150915050806000015490806001016040518060e001604052908160008201548152602001600182018054610541906114b9565b80601f016020809104026020016040519081016040528092919081815260200182805461056d906114b9565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b505050505081526020016002820180546105d3906114b9565b80601f01602080910402602001604051908101604052809291908181526020018280546105ff906114b9565b801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b50505050508152602001600382018054610665906114b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610691906114b9565b80156106de5780601f106106b3576101008083540402835291602001916106de565b820191906000526020600020905b8154815290600101906020018083116106c157829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481525050905082565b600080600160008481526020019081526020016000206000015414159050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008381526020019081526020016000206040518060e00160405290816000820154815260200160018201805461078b906114b9565b80601f01602080910402602001604051908101604052809291908181526020018280546107b7906114b9565b80156108045780601f106107d957610100808354040283529160200191610804565b820191906000526020600020905b8154815290600101906020018083116107e757829003601f168201915b5050505050815260200160028201805461081d906114b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610849906114b9565b80156108965780601f1061086b57610100808354040283529160200191610896565b820191906000526020600020905b81548152906001019060200180831161087957829003601f168201915b505050505081526020016003820180546108af906114b9565b80601f01602080910402602001604051908101604052809291908181526020018280546108db906114b9565b80156109285780601f106108fd57610100808354040283529160200191610928565b820191906000526020600020905b81548152906001019060200180831161090b57829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481525050905061095a8261070a565b610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099090611536565b60405180910390fd5b80608001513410156109e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d7906115a2565b60405180910390fd5b60008160c0015111610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e9061160e565b60405180910390fd5b60006040518060400160405280428152602001838152509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610a909061165d565b919050555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060008201518160000155602082015181600101600082015181600001556020820151816001019081610b579190611851565b506040820151816002019081610b6d9190611851565b506060820151816003019081610b839190611851565b506080820151816004015560a0820151816005015560c08201518160060155505090505060018260c00151610bb89190611923565b60016000858152602001908152602001600020600601819055507f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed33600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548460000151604051610c4893929190611957565b60405180910390a1505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ce3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cda9061146a565b60405180910390fd5b60006040518060e0016040528089815260200188815260200187815260200186815260200185815260200184815260200183815250905080600160008a8152602001908152602001600020600082015181600001556020820151816001019081610d4d9190611851565b506040820151816002019081610d639190611851565b506060820151816003019081610d799190611851565b506080820151816004015560a0820151816005015560c082015181600601559050507ffdbe2a012c10ec01592653978eaa09b5ca60b143a0e617505b2ebcbd911ec5b8878584604051610dce9392919061198e565b60405180910390a15050505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610e0781610df4565b8114610e1257600080fd5b50565b600081359050610e2481610dfe565b92915050565b600060208284031215610e4057610e3f610dea565b5b6000610e4e84828501610e15565b91505092915050565b610e6081610df4565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ea0578082015181840152602081019050610e85565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ec882610e66565b610ed28185610e71565b9350610ee2818560208601610e82565b610eeb81610eac565b840191505092915050565b600060e082019050610f0b600083018a610e57565b8181036020830152610f1d8189610ebd565b90508181036040830152610f318188610ebd565b90508181036060830152610f458187610ebd565b9050610f546080830186610e57565b610f6160a0830185610e57565b610f6e60c0830184610e57565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fa582610f7a565b9050919050565b610fb581610f9a565b8114610fc057600080fd5b50565b600081359050610fd281610fac565b92915050565b600060208284031215610fee57610fed610dea565b5b6000610ffc84828501610fc3565b91505092915050565b600060208201905061101a6000830184610e57565b92915050565b6000806040838503121561103757611036610dea565b5b600061104585828601610fc3565b925050602061105685828601610e15565b9150509250929050565b61106981610df4565b82525050565b600082825260208201905092915050565b600061108b82610e66565b611095818561106f565b93506110a5818560208601610e82565b6110ae81610eac565b840191505092915050565b600060e0830160008301516110d16000860182611060565b50602083015184820360208601526110e98282611080565b915050604083015184820360408601526111038282611080565b9150506060830151848203606086015261111d8282611080565b91505060808301516111326080860182611060565b5060a083015161114560a0860182611060565b5060c083015161115860c0860182611060565b508091505092915050565b60006040820190506111786000830185610e57565b818103602083015261118a81846110b9565b90509392505050565b60008115159050919050565b6111a881611193565b82525050565b60006020820190506111c3600083018461119f565b92915050565b6111d281610f9a565b82525050565b60006020820190506111ed60008301846111c9565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61123582610eac565b810181811067ffffffffffffffff82111715611254576112536111fd565b5b80604052505050565b6000611267610de0565b9050611273828261122c565b919050565b600067ffffffffffffffff821115611293576112926111fd565b5b61129c82610eac565b9050602081019050919050565b82818337600083830152505050565b60006112cb6112c684611278565b61125d565b9050828152602081018484840111156112e7576112e66111f8565b5b6112f28482856112a9565b509392505050565b600082601f83011261130f5761130e6111f3565b5b813561131f8482602086016112b8565b91505092915050565b600080600080600080600060e0888a03121561134757611346610dea565b5b60006113558a828b01610e15565b975050602088013567ffffffffffffffff81111561137657611375610def565b5b6113828a828b016112fa565b965050604088013567ffffffffffffffff8111156113a3576113a2610def565b5b6113af8a828b016112fa565b955050606088013567ffffffffffffffff8111156113d0576113cf610def565b5b6113dc8a828b016112fa565b94505060806113ed8a828b01610e15565b93505060a06113fe8a828b01610e15565b92505060c061140f8a828b01610e15565b91505092959891949750929550565b7f4f6e6c79204f776e657200000000000000000000000000000000000000000000600082015250565b6000611454600a83610e71565b915061145f8261141e565b602082019050919050565b6000602082019050818103600083015261148381611447565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114d157607f821691505b6020821081036114e4576114e361148a565b5b50919050565b7f4974656d206e6f74206578697374000000000000000000000000000000000000600082015250565b6000611520600e83610e71565b915061152b826114ea565b602082019050919050565b6000602082019050818103600083015261154f81611513565b9050919050565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b600061158c601283610e71565b915061159782611556565b602082019050919050565b600060208201905081810360008301526115bb8161157f565b9050919050565b7f4f7574206f662053746f636b0000000000000000000000000000000000000000600082015250565b60006115f8600c83610e71565b9150611603826115c2565b602082019050919050565b60006020820190508181036000830152611627816115eb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061166882610df4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361169a5761169961162e565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826116ca565b61171186836116ca565b95508019841693508086168417925050509392505050565b6000819050919050565b600061174e61174961174484610df4565b611729565b610df4565b9050919050565b6000819050919050565b61176883611733565b61177c61177482611755565b8484546116d7565b825550505050565b600090565b611791611784565b61179c81848461175f565b505050565b5b818110156117c0576117b5600082611789565b6001810190506117a2565b5050565b601f821115611805576117d6816116a5565b6117df846116ba565b810160208510156117ee578190505b6118026117fa856116ba565b8301826117a1565b50505b505050565b600082821c905092915050565b60006118286000198460080261180a565b1980831691505092915050565b60006118418383611817565b9150826002028217905092915050565b61185a82610e66565b67ffffffffffffffff811115611873576118726111fd565b5b61187d82546114b9565b6118888282856117c4565b600060209050601f8311600181146118bb57600084156118a9578287015190505b6118b38582611835565b86555061191b565b601f1984166118c9866116a5565b60005b828110156118f1578489015182556001820191506020850194506020810190506118cc565b8683101561190e578489015161190a601f891682611817565b8355505b6001600288020188555050505b505050505050565b600061192e82610df4565b915061193983610df4565b92508282039050818111156119515761195061162e565b5b92915050565b600060608201905061196c60008301866111c9565b6119796020830185610e57565b6119866040830184610e57565b949350505050565b600060608201905081810360008301526119a88186610ebd565b90506119b76020830185610e57565b6119c46040830184610e57565b94935050505056fea264697066735822122019bfff7c5c53be7d4bf99f998a1c8a64dc12df77c727fedcf2aabade5598118564736f6c63430008180033";

type DappazonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DappazonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dappazon__factory extends ContractFactory {
  constructor(...args: DappazonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Dappazon & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Dappazon__factory {
    return super.connect(runner) as Dappazon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DappazonInterface {
    return new Interface(_abi) as DappazonInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Dappazon {
    return new Contract(address, _abi, runner) as unknown as Dappazon;
  }
}
